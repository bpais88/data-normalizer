{"ast":null,"code":"var _jsxFileName = \"/Users/brunopais/Desktop/data-normalizer/frontend/src/components/Transformation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Transformation() {\n  _s();\n  const [source, setSource] = useState({});\n  const [targetSchema, setTargetSchema] = useState([]);\n  const [mappings, setMappings] = useState({});\n  const [transformations, setTransformations] = useState({});\n  const handleTransform = async () => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/transform', {\n        source,\n        target_schema: targetSchema,\n        mappings,\n        transformations\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.error('Error transforming data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTransform,\n      children: \"Transform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(Transformation, \"B2tONunKcrPtXqeOhRGYTADTwQI=\");\n_c = Transformation;\nexport default Transformation;\nvar _c;\n$RefreshReg$(_c, \"Transformation\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Transformation","_s","source","setSource","targetSchema","setTargetSchema","mappings","setMappings","transformations","setTransformations","handleTransform","response","post","target_schema","console","log","data","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/brunopais/Desktop/data-normalizer/frontend/src/components/Transformation.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction Transformation() {\n    const [source, setSource] = useState({});\n    const [targetSchema, setTargetSchema] = useState([]);\n    const [mappings, setMappings] = useState({});\n    const [transformations, setTransformations] = useState({});\n\n    const handleTransform = async () => {\n        try {\n            const response = await axios.post('http://127.0.0.1:5000/transform', {\n                source,\n                target_schema: targetSchema,\n                mappings,\n                transformations,\n            });\n            console.log(response.data);\n        } catch (error) {\n            console.error('Error transforming data:', error);\n        }\n    };\n\n    return (\n        <div>\n            {/* Add UI elements to capture source, targetSchema, mappings, and transformations */}\n            <button onClick={handleTransform}>Transform</button>\n        </div>\n    );\n}\n\nexport default Transformation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1D,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,iCAAiC,EAAE;QACjEV,MAAM;QACNW,aAAa,EAAET,YAAY;QAC3BE,QAAQ;QACRE;MACJ,CAAC,CAAC;MACFM,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,oBACIlB,OAAA;IAAAmB,QAAA,eAEInB,OAAA;MAAQoB,OAAO,EAAET,eAAgB;MAAAQ,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEd;AAACtB,EAAA,CA1BQD,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AA4BvB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}